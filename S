# Version file (versions.tf)
terraform {
  required_version = ">= 1.0.3"
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = ">= 3.0"
    }
  }
}

# Provider Configuration (provider.tf)
provider "aws" {
  region = var.aws_region
}

# Variables (variables.tf)
variable "aws_region" {
  description = "AWS region"
  type        = string
  default     = "us-east-1"
}

variable "tags" {
  type = map(string)
  default = {
    Environment = "Production"
    Application = "Commence Software"
    Owner      = "DevOps Team"
    CostCenter = "12345"
  }
}

# Main resources (main.tf)

## S3 Bucket for Logging
resource "aws_s3_bucket" "log_bucket" {
  bucket = "fpac-logs-bucket"
  tags   = var.tags
}

## CloudWatch Log Group
resource "aws_cloudwatch_log_group" "fpac_logs" {
  name              = "/aws/fpac/logs"
  retention_in_days = 30
  tags              = var.tags
}

## Kinesis Firehose for Splunk Integration
resource "aws_kinesis_firehose_delivery_stream" "splunk_stream" {
  name        = "fpac-splunk-stream"
  destination = "splunk"

  splunk_configuration {
    hec_endpoint                = "https://splunk-instance:8088"
    hec_token                   = "YOUR_SPLUNK_HEC_TOKEN"
    hec_acknowledgment_timeout  = 300
  }
}

## CloudWatch Alarm for High CPU Usage
resource "aws_cloudwatch_metric_alarm" "high_cpu" {
  alarm_name          = "high-cpu-utilization"
  comparison_operator = "GreaterThanThreshold"
  evaluation_periods  = 2
  metric_name         = "CPUUtilization"
  namespace          = "AWS/EC2"
  period             = 60
  statistic          = "Average"
  threshold         = 80
  alarm_description  = "Triggered when CPU utilization exceeds 80%"
  actions_enabled    = true

  alarm_actions = [aws_sns_topic.alerts.arn]
}

## SNS Topic for Alerts
resource "aws_sns_topic" "alerts" {
  name = "fpac-alerts"
  tags = var.tags
}

## Subscription for SNS Alerts
resource "aws_sns_topic_subscription" "email_alert" {
  topic_arn = aws_sns_topic.alerts.arn
  protocol  = "email"
  endpoint  = "alerts@fpac.gov"
}

## IAM Role for CloudWatch and Logging
resource "aws_iam_role" "cloudwatch_role" {
  name = "fpac-cloudwatch-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
  
  tags = var.tags
}

## IAM Policy for CloudWatch and Logging
resource "aws_iam_policy" "cloudwatch_policy" {
  name        = "fpac-cloudwatch-policy"
  description = "Policy for allowing CloudWatch and logging access"
  policy      = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
      ],
      "Resource": "*"
    }
  ]
}
EOF
}

## Attach IAM Policy to Role
resource "aws_iam_role_policy_attachment" "cloudwatch_attach" {
  role       = aws_iam_role.cloudwatch_role.name
  policy_arn = aws_iam_policy.cloudwatch_policy.arn
}

# Outputs (outputs.tf)
output "log_bucket" {
  description = "S3 bucket for centralized logging"
  value       = aws_s3_bucket.log_bucket.id
}

output "cloudwatch_log_group" {
  description = "CloudWatch Log Group for logging"
  value       = aws_cloudwatch_log_group.fpac_logs.name
}

output "splunk_firehose_stream" {
  description = "Kinesis Firehose stream for Splunk integration"
  value       = aws_kinesis_firehose_delivery_stream.splunk_stream.name
}

output "cpu_alarm_arn" {
  description = "ARN of the high CPU utilization alarm"
  value       = aws_cloudwatch_metric_alarm.high_cpu.arn
}

output "sns_alerts_topic_arn" {
  description = "ARN of the SNS alerts topic"
  value       = aws_sns_topic.alerts.arn
}

output "cloudwatch_role_arn" {
  description = "IAM Role for CloudWatch and Logging"
  value       = aws_iam_role.cloudwatch_role.arn
}
